[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "stringify",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "CommandeClientViewSet",
        "importPath": "stock.views",
        "description": "stock.views",
        "isExtraImport": true,
        "detail": "stock.views",
        "documentation": {}
    },
    {
        "label": "CommandeFournisseurViewSet",
        "importPath": "stock.views",
        "description": "stock.views",
        "isExtraImport": true,
        "detail": "stock.views",
        "documentation": {}
    },
    {
        "label": "ProduitViewSet",
        "importPath": "stock.views",
        "description": "stock.views",
        "isExtraImport": true,
        "detail": "stock.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "Commands",
        "importPath": "imaplib",
        "description": "imaplib",
        "isExtraImport": true,
        "detail": "imaplib",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "client.frontend.node_modules.flatted.python.flatted",
        "description": "client.frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "client.frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "client.frontend.node_modules.flatted.python.flatted",
        "description": "client.frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "client.frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "client.frontend.node_modules.flatted.python.flatted",
        "description": "client.frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "client.frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "client.frontend.node_modules.flatted.python.flatted",
        "description": "client.frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "client.frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "def stringify(value):\n    return _stringify(value, separators=(',', ':'))\nassert stringify([None, None]) == '[[null,null]]'\na = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "a = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['o']",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "b = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['one']",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['two']",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['three']",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['a']",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['test']",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['array']",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a2",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "a2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o2",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "o2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "str",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "str = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "oo",
        "kind": 5,
        "importPath": "client.frontend.node_modules.flatted.python.test",
        "description": "client.frontend.node_modules.flatted.python.test",
        "peekOfCode": "oo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "client.frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "server.gestion.gestion.asgi",
        "description": "server.gestion.gestion.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "server.gestion.gestion.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-oc#!h_-wgn-!96zfz8c2493#fe@u@o&ltqs9ae2b5f0%x4&sjh'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-oc#!h_-wgn-!96zfz8c2493#fe@u@o&ltqs9ae2b5f0%x4&sjh'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'stock',",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'stock',\n    'rest_framework',\n    'django_filters',",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n]",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nROOT_URLCONF = 'gestion.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nROOT_URLCONF = 'gestion.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "ROOT_URLCONF = 'gestion.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "WSGI_APPLICATION = 'gestion.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ],\n}\n# Internationalization\n# https://docs.djangoproject.com/en/5.1/topics/i18n/\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'  # Exemple pour Gmail",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'  # Exemple pour Gmail\nEMAIL_PORT = 587",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'  # Exemple pour Gmail\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'moreljeuf@gmail.com'\nEMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'  # Exemple pour Gmail\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'moreljeuf@gmail.com'\nEMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'  # Exemple pour Gmail\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'moreljeuf@gmail.com'\nEMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'  # Exemple pour Gmail\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'moreljeuf@gmail.com'\nEMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'moreljeuf@gmail.com'\nEMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'moreljeuf@gmail.com'\nEMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "EMAIL_HOST_USER = 'moreljeuf@gmail.com'\nEMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "server.gestion.gestion.settings",
        "description": "server.gestion.gestion.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = '@Lalegende237'",
        "detail": "server.gestion.gestion.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "server.gestion.gestion.urls",
        "description": "server.gestion.gestion.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('stock.urls')),  # Ajouter les routes de l'API\n    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n]",
        "detail": "server.gestion.gestion.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "server.gestion.gestion.wsgi",
        "description": "server.gestion.gestion.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "server.gestion.gestion.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0001_initial",
        "description": "server.gestion.stock.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Produit',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nom', models.CharField(max_length=255)),",
        "detail": "server.gestion.stock.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0002_produit_seuil_critique_alter_produit_nom",
        "description": "server.gestion.stock.migrations.0002_produit_seuil_critique_alter_produit_nom",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='produit',\n            name='seuil_critique',\n            field=models.IntegerField(default=10),\n        ),",
        "detail": "server.gestion.stock.migrations.0002_produit_seuil_critique_alter_produit_nom",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0003_alter_produit_quantite_en_stock",
        "description": "server.gestion.stock.migrations.0003_alter_produit_quantite_en_stock",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0002_produit_seuil_critique_alter_produit_nom'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='produit',\n            name='quantite_en_stock',\n            field=models.IntegerField(default=1),\n        ),",
        "detail": "server.gestion.stock.migrations.0003_alter_produit_quantite_en_stock",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0004_rename_quantite_en_stock_produit_quantiteenstock",
        "description": "server.gestion.stock.migrations.0004_rename_quantite_en_stock_produit_quantiteenstock",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0003_alter_produit_quantite_en_stock'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='produit',\n            old_name='quantite_en_stock',\n            new_name='quantiteEnStock',\n        ),",
        "detail": "server.gestion.stock.migrations.0004_rename_quantite_en_stock_produit_quantiteenstock",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0005_rename_quantiteenstock_produit_quantite_en_stock",
        "description": "server.gestion.stock.migrations.0005_rename_quantiteenstock_produit_quantite_en_stock",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0004_rename_quantite_en_stock_produit_quantiteenstock'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='produit',\n            old_name='quantiteEnStock',\n            new_name='quantite_en_stock',\n        ),",
        "detail": "server.gestion.stock.migrations.0005_rename_quantiteenstock_produit_quantite_en_stock",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0006_commandeclient_client_nom_and_more",
        "description": "server.gestion.stock.migrations.0006_commandeclient_client_nom_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0005_rename_quantiteenstock_produit_quantite_en_stock'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='commandeclient',\n            name='client_nom',\n            field=models.CharField(default='', max_length=100),\n            preserve_default=False,",
        "detail": "server.gestion.stock.migrations.0006_commandeclient_client_nom_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0007_commandefournisseur_statut_and_more",
        "description": "server.gestion.stock.migrations.0007_commandefournisseur_statut_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0006_commandeclient_client_nom_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='commandefournisseur',\n            name='statut',\n            field=models.CharField(choices=[('en_attente', 'En attente'), ('validée', 'Validée'), ('envoyée', 'Envoyée')], default='en_attente', max_length=10),\n        ),",
        "detail": "server.gestion.stock.migrations.0007_commandefournisseur_statut_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0008_commandeclient_statut_and_more",
        "description": "server.gestion.stock.migrations.0008_commandeclient_statut_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0007_commandefournisseur_statut_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='commandeclient',\n            name='statut',\n            field=models.CharField(choices=[('en_attente', 'En attente'), ('validée', 'Validée'), ('envoyée', 'Envoyée')], default='en_attente', max_length=10),\n        ),",
        "detail": "server.gestion.stock.migrations.0008_commandeclient_statut_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0009_notification",
        "description": "server.gestion.stock.migrations.0009_notification",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0008_commandeclient_statut_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Notification',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('recipient_type', models.CharField(max_length=50)),",
        "detail": "server.gestion.stock.migrations.0009_notification",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.gestion.stock.migrations.0010_delete_notification",
        "description": "server.gestion.stock.migrations.0010_delete_notification",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('stock', '0009_notification'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Notification',\n        ),\n    ]",
        "detail": "server.gestion.stock.migrations.0010_delete_notification",
        "documentation": {}
    },
    {
        "label": "StockConfig",
        "kind": 6,
        "importPath": "server.gestion.stock.apps",
        "description": "server.gestion.stock.apps",
        "peekOfCode": "class StockConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'stock'",
        "detail": "server.gestion.stock.apps",
        "documentation": {}
    },
    {
        "label": "Produit",
        "kind": 6,
        "importPath": "server.gestion.stock.models",
        "description": "server.gestion.stock.models",
        "peekOfCode": "class Produit(models.Model):\n    nom = models.CharField(max_length=100)\n    description = models.TextField(blank=True, null=True)\n    prix = models.DecimalField(max_digits=10, decimal_places=2)\n    quantite_en_stock = models.IntegerField(default=1)\n    seuil_critique = models.IntegerField(default=10) \n    def __str__(self):\n        return self.nom\n# Modèle pour les commandes des clients\nclass CommandeClient(models.Model):",
        "detail": "server.gestion.stock.models",
        "documentation": {}
    },
    {
        "label": "CommandeClient",
        "kind": 6,
        "importPath": "server.gestion.stock.models",
        "description": "server.gestion.stock.models",
        "peekOfCode": "class CommandeClient(models.Model):\n    STATUT_CHOICES = [\n        ('en_attente', 'En attente'),\n        ('validée', 'Validée'),\n        ('envoyée', 'Envoyée'),\n    ]\n    client_nom = models.CharField(max_length=100)\n    produit = models.ForeignKey('Produit', on_delete=models.CASCADE)\n    quantite = models.IntegerField()\n    statut = models.CharField(max_length=10, choices=STATUT_CHOICES, default='en_attente')",
        "detail": "server.gestion.stock.models",
        "documentation": {}
    },
    {
        "label": "CommandeFournisseur",
        "kind": 6,
        "importPath": "server.gestion.stock.models",
        "description": "server.gestion.stock.models",
        "peekOfCode": "class CommandeFournisseur(models.Model):\n    STATUT_CHOICES = [\n        ('en_attente', 'En attente'),\n        ('validée', 'Validée'),\n        ('envoyée', 'Envoyée'),\n    ]\n    fournisseur_nom = models.CharField(max_length=100)\n    produit = models.ForeignKey('Produit', on_delete=models.CASCADE)\n    quantite = models.IntegerField()\n    statut = models.CharField(max_length=10, choices=STATUT_CHOICES, default='en_attente')",
        "detail": "server.gestion.stock.models",
        "documentation": {}
    },
    {
        "label": "ProduitSerializer",
        "kind": 6,
        "importPath": "server.gestion.stock.serializers",
        "description": "server.gestion.stock.serializers",
        "peekOfCode": "class ProduitSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Produit\n        fields = '__all__'\n    # Validation pour le prix\n    def validate_prix(self, value):\n        if value <= 0:\n            raise ValidationError(\"Le prix doit être supérieur à 0.\")\n        return value\n    # Validation pour la quantité en stock",
        "detail": "server.gestion.stock.serializers",
        "documentation": {}
    },
    {
        "label": "CommandeClientSerializer",
        "kind": 6,
        "importPath": "server.gestion.stock.serializers",
        "description": "server.gestion.stock.serializers",
        "peekOfCode": "class CommandeClientSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommandeClient\n        fields = '__all__'\n# Serializer pour le modèle CommandeFournisseur\nclass CommandeFournisseurSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommandeFournisseur\n        fields = '__all__'",
        "detail": "server.gestion.stock.serializers",
        "documentation": {}
    },
    {
        "label": "CommandeFournisseurSerializer",
        "kind": 6,
        "importPath": "server.gestion.stock.serializers",
        "description": "server.gestion.stock.serializers",
        "peekOfCode": "class CommandeFournisseurSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommandeFournisseur\n        fields = '__all__'",
        "detail": "server.gestion.stock.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "server.gestion.stock.urls",
        "description": "server.gestion.stock.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'produits', ProduitViewSet)\nrouter.register(r'commande-clients', CommandeClientViewSet)\nrouter.register(r'commande-fournisseurs', CommandeFournisseurViewSet)\nurlpatterns = router.urls",
        "detail": "server.gestion.stock.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "server.gestion.stock.urls",
        "description": "server.gestion.stock.urls",
        "peekOfCode": "urlpatterns = router.urls",
        "detail": "server.gestion.stock.urls",
        "documentation": {}
    },
    {
        "label": "ProduitViewSet",
        "kind": 6,
        "importPath": "server.gestion.stock.views",
        "description": "server.gestion.stock.views",
        "peekOfCode": "class ProduitViewSet(viewsets.ModelViewSet):\n    queryset = Produit.objects.all()\n    serializer_class = ProduitSerializer\n    filter_backends = [DjangoFilterBackend]\n    filterset_fields = ['nom', 'prix', 'quantite_en_stock']\n    renderer_classes = [JSONRenderer]  # Limiter à l'API JSON\n    def perform_update(self, serializer):\n        produit = serializer.save()\n        if produit.quantite_en_stock <= produit.seuil_critique:\n            self.notifier_administrateur(produit)",
        "detail": "server.gestion.stock.views",
        "documentation": {}
    },
    {
        "label": "CommandeClientViewSet",
        "kind": 6,
        "importPath": "server.gestion.stock.views",
        "description": "server.gestion.stock.views",
        "peekOfCode": "class CommandeClientViewSet(viewsets.ModelViewSet):\n    queryset = CommandeClient.objects.all()\n    serializer_class = CommandeClientSerializer\n    filter_backends = [DjangoFilterBackend]\n    filterset_fields = ['produit', 'date_commande']  # Champs à filtrer\n# VueSet pour le modèle CommandeFournisseur\nclass CommandeFournisseurViewSet(viewsets.ModelViewSet):\n    queryset = CommandeFournisseur.objects.all()\n    serializer_class = CommandeFournisseurSerializer\n    filter_backends = [DjangoFilterBackend]",
        "detail": "server.gestion.stock.views",
        "documentation": {}
    },
    {
        "label": "CommandeFournisseurViewSet",
        "kind": 6,
        "importPath": "server.gestion.stock.views",
        "description": "server.gestion.stock.views",
        "peekOfCode": "class CommandeFournisseurViewSet(viewsets.ModelViewSet):\n    queryset = CommandeFournisseur.objects.all()\n    serializer_class = CommandeFournisseurSerializer\n    filter_backends = [DjangoFilterBackend]\n    filterset_fields = ['produit', 'date_commande']  # Champs à filtrer",
        "detail": "server.gestion.stock.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "server.gestion.manage",
        "description": "server.gestion.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gestion.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "server.gestion.manage",
        "documentation": {}
    }
]